/*
 * RESTful Manager API
 * This page provides an **interactive** documentation for RESTful Manager API. In addition to the typical information provided for each operation (parameters, responses, etc.), you can experiment with it by setting parameters and clicking the `Try it out!` button. The operation will be invoked, and you'll see the response code and body, as well as the `curl` command and request URL which were used to invoke the command.  Furthermore, since this API was created using [Swagger](http://swagger.io), you can also download its [specification](xap-manager-api.yaml) and use Swagger's [Online Editor](http://editor.swagger.io) to generate a client in your favorite language. 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DeploymentTopology
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-15T10:53:27.384Z")
public class DeploymentTopology {
  /**
   * Cluster schema (optional)
   */
  @JsonAdapter(SchemaEnum.Adapter.class)
  public enum SchemaEnum {
    PARTITIONED("partitioned"),
    
    SYNC_REPLICATED("sync_replicated"),
    
    ASYNC_REPLICATED("async_replicated");

    private String value;

    SchemaEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SchemaEnum fromValue(String text) {
      for (SchemaEnum b : SchemaEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SchemaEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SchemaEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SchemaEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SchemaEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("schema")
  private SchemaEnum schema = null;

  @SerializedName("instances")
  private Integer instances = null;

  @SerializedName("partitions")
  private Integer partitions = null;

  @SerializedName("backupsPerPartition")
  private Integer backupsPerPartition = null;

  public DeploymentTopology schema(SchemaEnum schema) {
    this.schema = schema;
    return this;
  }

   /**
   * Cluster schema (optional)
   * @return schema
  **/
  @ApiModelProperty(value = "Cluster schema (optional)")
  public SchemaEnum getSchema() {
    return schema;
  }

  public void setSchema(SchemaEnum schema) {
    this.schema = schema;
  }

  public DeploymentTopology instances(Integer instances) {
    this.instances = instances;
    return this;
  }

   /**
   * Number of instances (not applicable for &#x60;partitioned&#x60; schema)
   * @return instances
  **/
  @ApiModelProperty(value = "Number of instances (not applicable for `partitioned` schema)")
  public Integer getInstances() {
    return instances;
  }

  public void setInstances(Integer instances) {
    this.instances = instances;
  }

  public DeploymentTopology partitions(Integer partitions) {
    this.partitions = partitions;
    return this;
  }

   /**
   * Number of partitions (applicable only for &#x60;partitioned&#x60; schema)
   * @return partitions
  **/
  @ApiModelProperty(value = "Number of partitions (applicable only for `partitioned` schema)")
  public Integer getPartitions() {
    return partitions;
  }

  public void setPartitions(Integer partitions) {
    this.partitions = partitions;
  }

  public DeploymentTopology backupsPerPartition(Integer backupsPerPartition) {
    this.backupsPerPartition = backupsPerPartition;
    return this;
  }

   /**
   * Number of backups per partition (applicable only for &#x60;partitioned&#x60; schema)
   * @return backupsPerPartition
  **/
  @ApiModelProperty(value = "Number of backups per partition (applicable only for `partitioned` schema)")
  public Integer getBackupsPerPartition() {
    return backupsPerPartition;
  }

  public void setBackupsPerPartition(Integer backupsPerPartition) {
    this.backupsPerPartition = backupsPerPartition;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeploymentTopology deploymentTopology = (DeploymentTopology) o;
    return Objects.equals(this.schema, deploymentTopology.schema) &&
        Objects.equals(this.instances, deploymentTopology.instances) &&
        Objects.equals(this.partitions, deploymentTopology.partitions) &&
        Objects.equals(this.backupsPerPartition, deploymentTopology.backupsPerPartition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schema, instances, partitions, backupsPerPartition);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeploymentTopology {\n");
    
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    partitions: ").append(toIndentedString(partitions)).append("\n");
    sb.append("    backupsPerPartition: ").append(toIndentedString(backupsPerPartition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

